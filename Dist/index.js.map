{"mappings":"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","sources":["Source/index.ts","Source/MyStartupTweaks.ts","Source/Utils/General.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","Source/AddDirectFileConvertButtons.ts","Source/Utils/AppSpecific.ts","Source/Utils/Arrays.ts","Source/Launcher.ts"],"sourcesContent":["import \"./MyStartupTweaks.js\";\nimport \"./AddDirectFileConvertButtons.js\";\nimport \"./Launcher.js\";","import {FindHTMLElementsMatching} from \"./Utils/General.js\";\n\nfunction Setup() {\n\tFindHTMLElementsMatching(\".model-slot-sort-button, .model-slot-sort-button-active\")[1].click();\n\tif (document.querySelector(\"#style1\") == null) {\n\t\tconst style1 = document.createElement(\"style\");\n\t\tstyle1.id = \"style1\";\n\t\tdocument.body.appendChild(style1);\n\t}\n\tdocument.querySelector(\"#style1\")!.innerHTML = `\n\t  .main-body { padding: 1rem !important; }\n\t  .character-area { padding: 10px !important; }\n\t  .config-area { padding: 10px !important; }\n\t  .model-slot-tiles-container { max-height: 32rem !important; }\n\t`;\n\n\tfetch(\"http://localhost:18888/update_settings\", {\n\t\tmethod: \"POST\", mode: \"cors\",\n\t\theaders: {\n\t\t\t\"content-type\": \"multipart/form-data; boundary=----WebKitFormBoundaryuhTAAoBfkhLFQciO\",\n\t\t\t\"cache-control\": \"no-cache\", pragma: \"no-cache\",\n\t\t},\n\t\tbody: \"------WebKitFormBoundaryuhTAAoBfkhLFQciO\\r\\nContent-Disposition: form-data; name=\\\"key\\\"\\r\\n\\r\\nrvcQuality\\r\\n------WebKitFormBoundaryuhTAAoBfkhLFQciO\\r\\nContent-Disposition: form-data; name=\\\"val\\\"\\r\\n\\r\\n1\\r\\n------WebKitFormBoundaryuhTAAoBfkhLFQciO--\\r\\n\",\n\t});\n\t// this part doesn't actually change quality-setting, but makes ui match with the quality-setting set by fetch above\n\tconst rvcQualitySelectEl = FindHTMLElementsMatching(\".advanced-setting-container-row-title\").find(a=>a.innerText == \"RVC Quality\")?.nextSibling?.childNodes[0] as HTMLSelectElement;\n\trvcQualitySelectEl.selectedIndex = 1;\n}\n\nexport function ApplyMyStartupTweaks() {\n\tSetup();\n\n\t// temp; let user type+enter \"t\" in console to reapply the startup tweaks (needed for some tweaks, eg. rvc-quality that gets reset on changing the voice)\n\tObject.defineProperty(window, \"t\", {\n\t\tconfigurable: true, // defaults to false\n\t\tget() {\n\t\t\tApplyMyStartupTweaks();\n\t\t},\n\t});\n\n\tconsole.log(\"Applied startup tweaks.\");\n}","export function FindHTMLElementsMatching(selector: string) {\n\treturn FindElementsMatching(selector) as HTMLElement[];\n}\nexport function FindElementsMatching(selector: string) {\n\treturn Array.from(document.querySelectorAll(selector));\n}\n\n/** If the dialog is closed/canceled, the promise will just never resolve. */\nexport function StartUpload(): Promise<File> {\n\treturn new Promise((resolve, reject)=>{\n\t\tconst fileInput = document.createElement(\"input\");\n\t\tfileInput.type = \"file\";\n\t\tfileInput.style.display = \"none\";\n\t\tfileInput.onchange = e=>{\n\t\t\tvar file = fileInput.files![0];\n\t\t\tif (file) resolve(file);\n\t\t};\n\t\tdocument.body.appendChild(fileInput);\n\t\tfileInput.click();\n\t});\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import {FindHTMLElementsMatching, StartUpload} from \"./Utils/General.js\";\nimport {GetExtraSizeInBytes, GetRecordButtonsContainer, GetVoiceConversionButtonsContainer, StopAudioInputFilePlayback, StopRegularVoiceConversion} from \"./Utils/AppSpecific.js\";\nimport {ArrayBufferToBase64, Base64ToArrayBuffer, FlattenFloat32Arrays, Float32ArrayToInt16Array, FloatTo16BitPCM, Int16ArrayToFloat32Array} from \"./Utils/Arrays.js\";\n\nasync function DecodeFileToAudioBuffer(file) {\n\tconst audioCtx = new AudioContext({sampleRate: 48000});\n\tconst decodedData = await audioCtx.decodeAudioData(await file.arrayBuffer());\n\taudioCtx.close();\n\treturn decodedData;\n}\n\nfunction DownloadFloat32ArrayAsWAV(data) {\n\tconst writeString = (view, offset, string)=>{\n\t\tfor (var i = 0; i < string.length; i++) {\n\t\t\tview.setUint8(offset + i, string.charCodeAt(i));\n\t\t}\n\t};\n\n\tconst buffer = new ArrayBuffer(44 + (data.length * 2));\n\tconst view = new DataView(buffer);\n\n\t// https://www.youfit.co.jp/archives/1418\n\twriteString(view, 0, \"RIFF\"); // RIFFヘッダ\n\tview.setUint32(4, 32 + data.length * 2, true); // これ以降のファイルサイズ\n\twriteString(view, 8, \"WAVE\"); // WAVEヘッダ\n\twriteString(view, 12, \"fmt \"); // fmtチャンク\n\tview.setUint32(16, 16, true); // fmtチャンクのバイト数\n\tview.setUint16(20, 1, true); // フォーマットID\n\tview.setUint16(22, 1, true); // チャンネル数\n\tview.setUint32(24, 48000, true); // サンプリングレート\n\tview.setUint32(28, 48000 * 2, true); // データ速度\n\tview.setUint16(32, 2, true); // ブロックサイズ\n\tview.setUint16(34, 16, true); // サンプルあたりのビット数\n\twriteString(view, 36, \"data\"); // dataチャンク\n\tview.setUint32(40, data.length * 2, true); // 波形データのバイト数\n\tFloatTo16BitPCM(view, 44, data); // 波形データ\n\tconst audioBlob = new Blob([view], {type: \"audio/wav\"});\n\n\tconst url = URL.createObjectURL(audioBlob);\n\tconst a = document.createElement(\"a\");\n\ta.href = url;\n\ta.download = `output.wav`;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tURL.revokeObjectURL(url);\n}\n\nasync function Convert(fileBlob: Blob, flushStartWithXChunks = 1) {\n\tconst startTime = Date.now();\n\n\t// We actually use the user-supplied \"extra size\" setting here rather than the \"chunk size\".\n\t// The \"extra size\" seems to match more with what we're doing: sending pre-recorded data. (rather than live-streaming audio, whose latency is what chunk-size is focused on)\n\tconst chunkSize = GetExtraSizeInBytes(); //GetChunkSizeInBytes();\n\tconst flushLengthInInt16Array = flushStartWithXChunks * chunkSize;\n\tconst flushLengthInF32Array = flushLengthInInt16Array / 2; // f32 arrays are twice as \"dense\" as int16 arrays, so need half as many slots to hold the same amount of data\n\tconsole.log(\"ChunkSize[extra]:\", chunkSize, \"@flushLength:\", flushLengthInInt16Array);\n\n\tconst audioBuffer = await DecodeFileToAudioBuffer(fileBlob);\n\tlet audioBufferAsF32Array = audioBuffer.getChannelData(0);\n\n\t// If the last chunk sent to the backend had noise at the end, it would normally \"bleed\" into the start of this conversion's chunks.\n\t// We avoid that, by \"flushing\" the converter backend with X chunks of silence, before sending the actual data. (we trim these \"flush chunks\" off at end)\n\t// Note that we apply this process early (on the f32-array, pre-conversion to i16-array), since it's easier to conceptualize (ie. silence is just a sequence of zeroes).\n\tif (flushLengthInInt16Array > 0) {\n\t\tconst flushChunk = new Float32Array(flushLengthInF32Array);\n\t\tflushChunk.fill(0); // in this flush chunk, just fill it with zeroes (meaning silence)\n\t\taudioBufferAsF32Array = FlattenFloat32Arrays([flushChunk, audioBufferAsF32Array]); // make space\n\t}\n\n\tconst audioBufferAsInt16PCMArrayBuffer = Float32ArrayToInt16Array(audioBufferAsF32Array);\n\n\tconst f32DataSubarrays = [] as Float32Array[];\n\tfor (let i = 0; i < audioBufferAsInt16PCMArrayBuffer.byteLength; i += chunkSize) {\n\t\tconst audioBufferRawAsBase64Str = ArrayBufferToBase64(audioBufferAsInt16PCMArrayBuffer.slice(i, i + chunkSize));\n\n\t\tconst requestBody = JSON.stringify({\n\t\t\ttimestamp: Date.now(),\n\t\t\tbuffer: audioBufferRawAsBase64Str,\n\t\t});\n\t\tconst resp = await fetch(\"http://127.0.0.1:18888/test\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: requestBody,\n\t\t});\n\t\tconst responseData = await resp.json();\n\t\tconsole.log(\"ResponseData:\", responseData);\n\n\t\tconst isFlushChunk = i < flushLengthInInt16Array;\n\t\tif (!isFlushChunk) {\n\t\t\tconst changedVoiceBase64 = responseData.changedVoiceBase64;\n\t\t\tconst ab = Base64ToArrayBuffer(changedVoiceBase64);\n\n\t\t\tconst f32Data = Int16ArrayToFloat32Array(new Int16Array(ab));\n\t\t\tf32DataSubarrays.push(f32Data);\n\t\t}\n\t}\n\tconst f32Data_combinedArray = FlattenFloat32Arrays(f32DataSubarrays);\n\n\tDownloadFloat32ArrayAsWAV(f32Data_combinedArray);\n\tconsole.log(\"Done in:\", Date.now() - startTime);\n}\n\nexport function AddButton_ConvertFreshFile() {\n\tconst button = document.createElement(\"button\");\n\tbutton.classList.add(\"v-added\");\n\tbutton.innerText = \"Convert fresh file\";\n\tbutton.onclick = async()=>{\n\t\t// help user out by stopping regular voice-conversion processes, if active\n\t\tStopRegularVoiceConversion();\n\t\tStopAudioInputFilePlayback();\n\n\t\tconst file = await StartUpload();\n\t\tConvert(file);\n\t};\n\tconst container = GetRecordButtonsContainer();\n\tcontainer.appendChild(button);\n}\nexport function AddButton_ConvertLoadedFile() {\n\tconst button = document.createElement(\"button\");\n\tbutton.classList.add(\"v-added\");\n\tbutton.innerText = \"Convert loaded file\";\n\tbutton.onclick = async()=>{\n\t\t// help user out by stopping regular voice-conversion processes, if active\n\t\tStopRegularVoiceConversion();\n\t\tStopAudioInputFilePlayback();\n\n\t\tconst loadedFileDataURI = (document.querySelector(\"#audio-test-converted\") as HTMLAudioElement).src;\n\t\tconst loadedFileAsBlob = await (await fetch(loadedFileDataURI)).blob();\n\t\tConvert(loadedFileAsBlob);\n\t};\n\tconst container = GetRecordButtonsContainer();\n\tcontainer.appendChild(button);\n}","import {FindHTMLElementsMatching} from \"./General.js\";\n\n// app state\n// ==========\n\n// these are of course extremely hacky; just use them for exploration/experimentation\nexport function GetAppState() {\n\tconst portraitAreaFiber = Object.entries(document.querySelector(\".portrait-area\") ?? []).find(a=>a[0].includes(\"__reactFiber$\"))?.[1];\n\tconst appState = portraitAreaFiber?.return?.dependencies.firstContext.memoizedValue;\n\treturn appState;\n}\nexport function GetAppActions() {\n\tconst portraitAreaFiber = Object.entries(document.querySelector(\".portrait-area\") ?? []).find(a=>a[0].includes(\"__reactFiber$\"))?.[1];\n\tconst actions = portraitAreaFiber?.return?.dependencies.firstContext.next.memoizedValue;\n\treturn actions;\n}\n\n// ui reading\n// ==========\n\nexport function GetChunkSizeInBytes() {\n\tconst chunkSelectEl = FindHTMLElementsMatching(\".config-sub-area-control-title\").find(a=>a.innerText == \"CHUNK:\")?.nextSibling?.childNodes[0] as HTMLSelectElement;\n\tconst chunkSelectInfo = chunkSelectEl.childNodes[chunkSelectEl.selectedIndex][\"innerText\"];\n\tconst chunkSizeInBytes = Number(chunkSelectInfo.match(/, ([0-9]+)\\)/)[1]);\n\treturn chunkSizeInBytes;\n}\nexport function GetExtraSizeInBytes() {\n\tconst extraSelectEl = FindHTMLElementsMatching(\".config-sub-area-control-title\").find(a=>a.innerText == \"EXTRA:\")?.nextSibling?.childNodes[0] as HTMLSelectElement;\n\tconst extraSelectInfo = extraSelectEl.childNodes[extraSelectEl.selectedIndex][\"innerText\"];\n\tconst extraSizeInBytes = Number(extraSelectInfo);\n\treturn extraSizeInBytes;\n}\n\nexport function GetRecordButtonsContainer() {\n\tconst controlAreaTitles = FindHTMLElementsMatching(\".config-sub-area-control-title\");\n\treturn controlAreaTitles.find(a=>a.innerText == \"REC.\")?.nextSibling?.childNodes[0] as HTMLElement;\n}\nexport function GetVoiceConversionButtonsContainer() {\n\tconst passthroughButton = FindHTMLElementsMatching(\".character-area-control-passthru-button-stanby, .character-area-control-passthru-button-active\")[0];\n\treturn passthroughButton!.parentElement!;\n}\n\n// ui actions\n// ==========\n\nexport function StopRegularVoiceConversion() {\n\tconst stopConversionButton = GetVoiceConversionButtonsContainer().childNodes[1] as HTMLElement;\n\tstopConversionButton.click();\n}\nexport function StopAudioInputFilePlayback() {\n\tconst audioInputFileEl = document.querySelector(\"#audio-test-converted\") as HTMLAudioElement;\n\tif (audioInputFileEl == null) return;\n\taudioInputFileEl.pause();\n}","export function ArrayBufferToBase64(buffer: ArrayBuffer) {\n\tvar binary = \"\";\n\tvar bytes = new Uint8Array(buffer);\n\tvar len = bytes.byteLength;\n\tfor (var i = 0; i < len; i++) {\n\t\tbinary += String.fromCharCode(bytes[i]);\n\t}\n\treturn window.btoa(binary);\n}\nexport function Base64ToArrayBuffer(base64: string) {\n\tvar binary_string = window.atob(base64);\n\tvar len = binary_string.length;\n\tvar bytes = new Uint8Array(len);\n\tfor (var i = 0; i < len; i++) {\n\t\tbytes[i] = binary_string.charCodeAt(i);\n\t}\n\treturn bytes.buffer;\n}\n\nexport function FloatTo16BitPCM(output: DataView, offset: number, input: Float32Array) {\n\tfor (var i = 0; i < input.length; i++, offset += 2) {\n\t\tvar s = Math.max(-1, Math.min(1, input[i]));\n\t\toutput.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n\t}\n}\nexport function Float32ArrayToInt16Array(data: Float32Array, offset = 0) {\n\tconst buffer = new ArrayBuffer(offset + (data.length * 2));\n\tconst view = new DataView(buffer);\n\tFloatTo16BitPCM(view, offset, data); // 波形データ\n\treturn buffer;\n}\nexport function Int16ArrayToFloat32Array(i16Data: Int16Array) {\n\tconst f32Data = new Float32Array(i16Data.length);\n\ti16Data.forEach((x, i)=>{\n\t\tconst float = x >= 0x8000 ? -(0x10000 - x) / 0x8000 : x / 0x7fff;\n\t\tf32Data[i] = float;\n\t});\n\treturn f32Data;\n}\n\nexport function FlattenFloat32Arrays(chunks: Float32Array[]) {\n\tconst nFrames = chunks.reduce((acc, elem)=>acc + elem.length, 0);\n\tconst result = new Float32Array(nFrames);\n\tlet currentFrame = 0;\n\tfor (const chunk of chunks) {\n\t\tresult.set(chunk, currentFrame);\n\t\tcurrentFrame += chunk.length;\n\t}\n\treturn result;\n}","import {AddButton_ConvertFreshFile, AddButton_ConvertLoadedFile} from \"./AddDirectFileConvertButtons.js\";\nimport {ApplyMyStartupTweaks} from \"./MyStartupTweaks.js\";\nimport {FindHTMLElementsMatching} from \"./Utils/General.js\";\n\n// clear the parcel cache each time our code runs, so that user can keep re-applying modified versions of this code without refreshing the page\nfunction ClearParcelCache() {\n\tObject.keys(window).filter(k=>k.startsWith(\"parcelRequire\")).forEach(k=>delete window[k]);\n}\nClearParcelCache();\n\nfunction ClearModificationsFromLastRun() {\n\tfor (const el of FindHTMLElementsMatching(\".v-added\")) {\n\t\tel.remove();\n\t}\n}\n\n// clear ui modifications from last run\nClearModificationsFromLastRun();\n\n// comment lines here to leave only the behavior you want\nApplyMyStartupTweaks();\nAddButton_ConvertFreshFile();\nAddButton_ConvertLoadedFile();\nconsole.log(\"Finished applying modifications.\");"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../"}